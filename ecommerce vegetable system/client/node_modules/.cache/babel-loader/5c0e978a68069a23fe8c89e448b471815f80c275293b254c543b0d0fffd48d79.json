{"ast":null,"code":"import { API } from '../config';\nimport queryString from 'query-string';\nexport const getProducts = sortBy => {\n  return fetch(`${API}/products?sortBy=${sortBy}&order=desc&limit=6`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getCategories = () => {\n  return fetch(`${API}/categories`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getFilteredProducts = (skip, limit, filters = {}) => {\n  const data = {\n    limit,\n    skip,\n    filters\n  };\n  return fetch(`${API}/products/by/search`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const list = params => {\n  const query = queryString.stringify(params);\n  console.log('query', query);\n  return fetch(`${API}/products/search?${query}`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const read = productId => {\n  return fetch(`${API}/product/${productId}`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listRelated = productId => {\n  return fetch(`${API}/products/related/${productId}`, {\n    method: 'GET'\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getBraintreeClientToken = (userId, token) => {\n  return fetch(`${API}/braintree/getToken/${userId}`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const processPayment = (userId, token, paymentData) => {\n  return fetch(`${API}/braintree/payment/${userId}`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(paymentData)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const createOrder = (userId, token, createOrderData) => {\n  return fetch(`${API}/order/create/${userId}`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      order: createOrderData\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"names":["API","queryString","getProducts","sortBy","fetch","method","then","response","json","catch","err","console","log","getCategories","getFilteredProducts","skip","limit","filters","data","headers","Accept","body","JSON","stringify","list","params","query","read","productId","listRelated","getBraintreeClientToken","userId","token","Authorization","processPayment","paymentData","createOrder","createOrderData","order"],"sources":["C:/mern-ecommerce-master/mern-ecommerce-master/client/src/core/apiCore.js"],"sourcesContent":["import { API } from '../config';\r\nimport queryString from 'query-string';\r\n\r\nexport const getProducts = (sortBy) => {\r\n  return fetch(`${API}/products?sortBy=${sortBy}&order=desc&limit=6`, {\r\n    method: 'GET',\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getCategories = () => {\r\n  return fetch(`${API}/categories`, {\r\n    method: 'GET',\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getFilteredProducts = (skip, limit, filters = {}) => {\r\n  const data = {\r\n    limit,\r\n    skip,\r\n    filters,\r\n  };\r\n  return fetch(`${API}/products/by/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const list = (params) => {\r\n  const query = queryString.stringify(params);\r\n  console.log('query', query);\r\n  return fetch(`${API}/products/search?${query}`, {\r\n    method: 'GET',\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const read = (productId) => {\r\n  return fetch(`${API}/product/${productId}`, {\r\n    method: 'GET',\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const listRelated = (productId) => {\r\n  return fetch(`${API}/products/related/${productId}`, {\r\n    method: 'GET',\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getBraintreeClientToken = (userId, token) => {\r\n  return fetch(`${API}/braintree/getToken/${userId}`, {\r\n    method: 'GET',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const processPayment = (userId, token, paymentData) => {\r\n  return fetch(`${API}/braintree/payment/${userId}`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(paymentData),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const createOrder = (userId, token, createOrderData) => {\r\n  return fetch(`${API}/order/create/${userId}`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({ order: createOrderData }),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}